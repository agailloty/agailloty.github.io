<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Articles on AXEL-CLERIS GAILLOTY</title><link>https://agailloty.github.io/fr/posts/</link><description>Recent content in Articles on AXEL-CLERIS GAILLOTY</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 05 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://agailloty.github.io/fr/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>L'injection de dépendance en C# (.NET 6)</title><link>https://agailloty.github.io/fr/posts/injection-dependance/</link><pubDate>Fri, 14 Oct 2022 00:00:00 +0000</pubDate><guid>https://agailloty.github.io/fr/posts/injection-dependance/</guid><description>L&amp;rsquo;injection de dépendance nous permet de déléguer la création et la gestion de vie d&amp;rsquo;une instance de classe en sorte que cette instance soir injectée lorsque nous en avons besoin.
L&amp;rsquo;injection de dépendance est en fait une application de l&amp;rsquo;inversion de dépendance</description></item><item><title>L'inversion de dépendance en C# (ID de SOLID)</title><link>https://agailloty.github.io/fr/posts/inversion-dependance/</link><pubDate>Fri, 14 Oct 2022 00:00:00 +0000</pubDate><guid>https://agailloty.github.io/fr/posts/inversion-dependance/</guid><description>Exemple Implémentation sans inversion de dépendance Pour mieux saisir le principe de l&amp;rsquo;inversion de dépendance, il me semble pertinent d&amp;rsquo;étudier un exemple pratique. Supposons que nous ayons une classe nommée TradeProcessor qui lit des données à partir d&amp;rsquo;une source, retraite les données brute et les stocke quelque part.
Cette classe dépend de trois autres classes notamment les classes:
DataProvider qui fournit à la classe un ensemble de méthodes pour récupérer les données brutes.</description></item><item><title>Installer WSL2 sur Linux</title><link>https://agailloty.github.io/fr/posts/wsl2-windows11/</link><pubDate>Wed, 28 Sep 2022 00:00:00 +0000</pubDate><guid>https://agailloty.github.io/fr/posts/wsl2-windows11/</guid><description>Le sous-système pour Linux Qu&amp;rsquo;est-ce ? Le sous système Linux pour Windows est une couche de compabilité développée par Microsoft qui permet faire fonctionner les binaires exécutables du système d&amp;rsquo;exploitation Linux de manière native sur Windows 10, 11 et Windows Server 2019 et ultérieur. La première version beta de WSL a été introduite en Août 2016 sur Windows 10. A cette époque seule Ubuntu (avec Bash par défaut) était supporté.</description></item><item><title>Le principe SOLID en C#</title><link>https://agailloty.github.io/fr/posts/solid-principles/</link><pubDate>Wed, 28 Sep 2022 00:00:00 +0000</pubDate><guid>https://agailloty.github.io/fr/posts/solid-principles/</guid><description/></item></channel></rss>